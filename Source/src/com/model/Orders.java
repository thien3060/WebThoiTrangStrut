package com.model;
// Generated Jun 7, 2016 8:01:22 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "thoitrang")
public class Orders implements java.io.Serializable {

	private Integer orderId;
	private Customers customers;
	private Date orderDate;
	private Date requireDate;
	private Date shippedDate;
	private String shipAddress;
	private String shipCity;
	private String shipRegion;
	private Set<Orderdetails> orderdetailses = new HashSet<Orderdetails>(0);

	public Orders() {
	}

	public Orders(Customers customers, Date orderDate, Date requireDate, Date shippedDate, String shipAddress) {
		this.customers = customers;
		this.orderDate = orderDate;
		this.requireDate = requireDate;
		this.shippedDate = shippedDate;
		this.shipAddress = shipAddress;
	}

	public Orders(Customers customers, Date orderDate, Date requireDate, Date shippedDate, String shipAddress,
			String shipCity, String shipRegion, Set orderdetailses) {
		this.customers = customers;
		this.orderDate = orderDate;
		this.requireDate = requireDate;
		this.shippedDate = shippedDate;
		this.shipAddress = shipAddress;
		this.shipCity = shipCity;
		this.shipRegion = shipRegion;
		this.orderdetailses = orderdetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "orderID", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customerID", nullable = false)
	public Customers getCustomers() {
		return this.customers;
	}

	public void setCustomers(Customers customers) {
		this.customers = customers;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "orderDate", nullable = false, length = 10)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "requireDate", nullable = false, length = 10)
	public Date getRequireDate() {
		return this.requireDate;
	}

	public void setRequireDate(Date requireDate) {
		this.requireDate = requireDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "shippedDate", nullable = false, length = 10)
	public Date getShippedDate() {
		return this.shippedDate;
	}

	public void setShippedDate(Date shippedDate) {
		this.shippedDate = shippedDate;
	}

	@Column(name = "shipAddress", nullable = false, length = 65535)
	public String getShipAddress() {
		return this.shipAddress;
	}

	public void setShipAddress(String shipAddress) {
		this.shipAddress = shipAddress;
	}

	@Column(name = "shipCity")
	public String getShipCity() {
		return this.shipCity;
	}

	public void setShipCity(String shipCity) {
		this.shipCity = shipCity;
	}

	@Column(name = "shipRegion")
	public String getShipRegion() {
		return this.shipRegion;
	}

	public void setShipRegion(String shipRegion) {
		this.shipRegion = shipRegion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Orderdetails> getOrderdetailses() {
		return this.orderdetailses;
	}

	public void setOrderdetailses(Set<Orderdetails> orderdetailses) {
		this.orderdetailses = orderdetailses;
	}

}
